# 生产级Nginx配置 - Blog Microservices
# 基于Module 5架构，添加生产环境优化

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # 日志格式 - 包含性能指标
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time" '
                    'service="$upstream_addr" gzip_ratio="$gzip_ratio"';
    
    access_log /var/log/nginx/access.log main;
    error_log  /var/log/nginx/error.log warn;
    
    # 性能优化配置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # 安全头配置
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # 限流配置
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=20r/s;
    
    # 上游服务定义 - 负载均衡 (基于Module 5的微服务)
    upstream user_service {
        least_conn;
        server user-service:3001 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }
    
    upstream post_service {
        least_conn;
        server post-service:3002 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }
    
    upstream comment_service {
        least_conn;
        server comment-service:3003 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }
    
    # 缓存配置
    proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60m use_temp_path=off;
    
    # 主服务器配置
    server {
        listen 80;
        server_name localhost;
        
        # 安全配置
        server_tokens off;
        
        # 静态文件缓存优化
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            root /usr/share/nginx/html;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # 启用gzip
            gzip_static on;
        }
        
        # 前端应用
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
            
            # HTML文件缓存策略
            location ~* \.html$ {
                expires 1h;
                add_header Cache-Control "public, must-revalidate";
            }
        }
        
        # 健康检查端点
        location /health {
            access_log off;
            return 200 '{"status":"healthy","timestamp":"$time_iso8601","version":"module-6-production"}';
            add_header Content-Type application/json;
        }
        
        # Nginx状态监控 (Prometheus)
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 172.16.0.0/12;  # Docker网络
            allow 10.0.0.0/8;     # 内部网络
            deny all;
        }
        
        # API路由 - 用户认证服务 (基于Module 5)
        location /api/users/ {
            limit_req zone=auth burst=20 nodelay;
            
            # 代理配置
            proxy_pass http://user_service/;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时配置
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # 缓冲配置
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # 错误处理
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 10s;
            
            # 健康检查
            error_page 502 503 504 /50x.html;
        }
        
        # API路由 - 文章服务
        location /api/posts/ {
            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://post_service/;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 缓存配置 (GET请求缓存)
            proxy_cache api_cache;
            proxy_cache_methods GET HEAD;
            proxy_cache_valid 200 302 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            proxy_cache_bypass $http_cache_control;
            add_header X-Cache-Status $upstream_cache_status;
            
            # 超时配置
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        }
        
        # API路由 - 评论服务
        location /api/comments/ {
            limit_req zone=api burst=30 nodelay;
            
            proxy_pass http://comment_service/;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        }
        
        # WebSocket支持 (预留)
        location /ws/ {
            proxy_pass http://user_service/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache off;
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }
        
        # 错误页面
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        # 阻止访问隐藏文件
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # 阻止访问备份文件
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}